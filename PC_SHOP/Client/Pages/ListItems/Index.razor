@page "/listitems/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@implements IDisposable

<h3>Listed Items</h3>

<br />
<a href="/listitems/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    List New Item
</a>
<br />
<br />

@if (ListItems == null)
{

    <div class="alert alert-info">Loading Items...</div>

}
else
{
    <table class="table table-responsive" id="listItemsTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price($)</th>
                <th>Condition</th>
                <th>Brand</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var listitem in ListItems)
            {
                <tr>
                    <td>@listitem.Item.Name</td>
                    <td>@listitem.Item.Description</td>
                    <td>@listitem.Price</td>
                    @if (Items != null)
                    {
                        foreach (var item in Items)
                        {
                            if (@listitem.ItemID == item.Id)
                            {
                                <td>@item.Condition.Name</td>
                            }
                        }
                    }
                    @if (Items != null)
                    {
                        foreach (var item in Items)
                        {
                            if (@listitem.ItemID == item.Id)
                            {
                                <td>@item.Brand.Name</td>
                            }
                        }
                    }
                    @if (Items != null)
                    {
                        foreach (var item in Items)
                        {
                            if (@listitem.ItemID == item.Id)
                            {
                                <td>@item.Category.Name</td>
                            }
                        }
                    }
                    <td>

                        <a href="/listitems/view/@listitem.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/listitems/editprice/@listitem.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(listitem.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<ListItem> ListItems;
    private IList<Item> Items;


    protected async override Task OnInitializedAsync()
    {
        ListItems = await _client.GetFromJsonAsync<List<ListItem>>($"{Endpoints.ListItemsEndpoint}");
        Items = await _client.GetFromJsonAsync<List<Item>>($"{Endpoints.ItemsEndpoint}");
    }

    async Task Delete(int listitemId)
    {
        var listitem = ListItems.First(q => q.Id == listitemId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {listitem.Item.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ListItemsEndpoint}/{listitemId}");
            await OnInitializedAsync();

        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#listItemsTable");

    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#listItemsTable");
    }

}
