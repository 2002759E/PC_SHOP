@inject HttpClient _client
@inject NavigationManager _navManager

<EditForm Model="@listitem" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Price($):</label>
        <div>
            <InputNumber @bind-Value="@listitem.Price" class="form-control" />
            <ValidationMessage For="@(() => listitem.Price)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>
    <button class="btn btn-primary btn-block" @onclick="@(() => goitem(@listitem.ItemID))">
        <span class="oi oi-arrow-right"></span>
        Edit Item
    </button>
    <BackToList Target="adminlistitems" />
</EditForm>

@code {

    [Parameter] public ListItem listitem { get; set; }
    [Parameter] public int id { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Item> Items;

    private void goitem(int? id2)
    {
        _navManager.NavigateTo("/adminlistitems/edititem/" + id2);
    }

    protected async override Task OnInitializedAsync()
    {
        Items = await _client.GetFromJsonAsync<List<Item>>($"{Endpoints.ItemsEndpoint}");
    }

}
