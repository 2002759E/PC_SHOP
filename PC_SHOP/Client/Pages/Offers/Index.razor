@page "/offers/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@implements IDisposable

<h3>Offers</h3>
<a href="/offers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Offer
</a>

@if (Offers == null)
{

    <div class="alert alert-info">Loading offers...</div>

}
else
{
    <table class="table table-responsive" id="offersTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var offer in Offers)
            {
                <tr>
                    <td>@offer.Name</td>
                    <td>
                        <a href="/offers/view/@offer.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/offers/edit/@offer.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete (offer.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}


@code {
    private List<Offer> Offers;

    protected async override Task OnInitializedAsync()
    {
        Offers = await _client.GetFromJsonAsync<List<Offer>>($"{Endpoints.OffersEndpoint}");
    }

    async Task Delete(int offerId)
    {
        var offer = Offers.First(q => q.Id == offerId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you wan to delete {offer.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.OffersEndpoint}/{offerId}");
            await OnInitializedAsync();

        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#offersTable");

    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#offersTable");
    }

}

